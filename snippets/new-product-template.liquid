<div class="new-product-template-content" data-section-id="{{ section_id }}"
  data-product-id="{{ product.id }}"
  data-section-type="product">
  {% comment %} <div class="page-width"> {% endcomment %}

  <div class="new-page-width">
    <div class="new-product-swiper">
      <div class="swiper-wrapper" id="swiperWrapper">
        {% comment %}
          {%- for media in product.media -%}
            {%- liquid
              assign img_url = media | img_url: '1x1' | replace: '_1x1.', '_{width}x.'
            -%}
            <div class="swiper-slide">
              <img class="lazyload" data-sizes="auto" data-src="{{ img_url }}"  alt="img">
            </div>
          {%- endfor -%}
        {% endcomment %}
      </div>
    </div>
    <div class="swiper-product__thumbs" id="swiperthumbs">
      {%- for media in product.media -%}
        {%- liquid
          assign img_url = media | img_url: '1x1' | replace: '_1x1.', '_{width}x.'
        -%}
        <div class="swiper-slide">
          <img class="lazyload" data-sizes="auto" data-src="{{ img_url }}"  alt="img">
        </div>
      {%- endfor -%}
    </div>
    {% comment %}
      <img data-sizes="auto" data-aspectratio="1.0" data-widths="[360, 540, 720, 900, 1080]"
      class="lazyload" data-src="https://25home.com/cdn/shop/files/1926-2_40fd686b-ea42-4bc0-9217-a47fd9483d25_1080x.jpg?v=1697162568"  alt="img">
    {% endcomment %}
  </div>
</div>
<script>
  var productMedia = {{ product.media | json }}
  function getImageUrl(src) {
    var lastDotPosition = src.lastIndexOf('.');
    return src.substring(0, lastDotPosition) + "_{width}x" + src.substring(lastDotPosition);
  }
  $(document).ready(function () {
    var $swiperWrapper = $('#swiperWrapper');
    $.each(productMedia, function (index, media) {
      var $swiperSlide = $('<div>', { class: 'swiper-slide' });
      // 创建 img 元素
      var $imgElement = $('<img>', {
        class: 'lazyload',
        'data-sizes': 'auto',
        'data-src': getImageUrl(media.src),
        alt: 'img'
      });

      $swiperSlide.append($imgElement);
      $swiperWrapper.append($swiperSlide);
    });
    var moSwiper = new Swiper('.new-product-swiper',{
      slidesPerView: 1,
    })
    var moSwiper = new Swiper('.swiper-product__thumbs',{
    })
  });
  var deviceWidth
  setHtmlFontSize()
  if (window.addEventListener) {
    window.addEventListener('resize', function () {
        setHtmlFontSize()
    }, false)
  }
  function setHtmlFontSize () {
    if (!getDeviceType()){
      deviceWidth = document.documentElement.clientWidth > 1920 ? 1920 : document.documentElement.clientWidth
      document.getElementsByTagName('html')[0].style.cssText = 'font-size:' + (deviceWidth / 1920) * 100 + 'px !important'
    } else {
      deviceWidth = document.documentElement.clientWidth
      document.getElementsByTagName('html')[0].style.cssText = 'font-size:' + (deviceWidth / 750) * 100 + 'px !important'
    }
  }

    {% comment %} document.addEventListener('page:loaded', function() {
      console.log('222222222222222222222222222222222')
    }); {% endcomment %}
    {% comment %} mulberry.core.renderInlineOffer({
      container: '.mulberry-container',
      offer: offer,
    }); {% endcomment %}
    {% comment %} let collectionsss1 = {{ product | json }}
    console.log(collectionsss1,'productproductproductproductproduct') {% endcomment %}
    {% comment %} let allproducts = {{ all_products['white-glove-delivery'] | json }}
    console.log(allproducts,'allproducts') {% endcomment %}
    {% comment %} let collectionsss = {{ collections['Bundle'].products | json }}
    console.log(collectionsss,'collectionssscollectionssscollectionsss') {% endcomment %}
</script>
